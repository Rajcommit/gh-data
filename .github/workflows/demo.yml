##https://github.com/actions/upload-artifact
##Every job gets their own runner machine, no two jobs runs on same a=machine
##https://docs.github.com/en/actions/reference/contexts-reference
name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}} ## Define an output variable to be used in the deploy job, ##https://docs.github.com/en/actions/reference/contexts-reference
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publishfiles
        id: publish
        run: find dist/assets/*.js  -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'  ## Find the js files in the dist/assets directory and print their names
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4 ## Upload the build artifacts
        with: ## Specify the path to the build directory, additional configuration
          name: build ## name for retriving the artifacts, can also use multiple names
          path: |
            dist 
            pakage.json
          ## path/output/bin/  ## include and save the files here
          ## path/output/test-results put the result artifacts here
          ## !path/**/*.tmp ## Exclude any template files
  ## even theough teh artifacts are gathered in the build job, they are not available in the deploy job, because both jobs run on different machines
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4 ## Download the artifacts from previous job
        with:
          name: build ## Name of the artifact to download must be same as the one uploaded in abve job
      - name: Output file-lists
        run: ls -R
      - name: Deploy
        run: echo "Deploying..."
